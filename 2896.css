.vlzlpab{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;}.vlzlpab > div{position:relative;z-index:0;-webkit-flex-direction:column-reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-align-items:initial;-webkit-box-align:initial;-ms-flex-align:initial;align-items:initial;}.vlzlpab > div > div:not(:last-child){margin-top:-16px;margin-right:0;}
/*# sourceMappingURL=data:application/json;base64,*/
.cds-tableCell-tvfsk4v{padding:0;margin:0;vertical-align:middle;border:none;}
.cds-tableHeaderCell-t3ajpug{color:var(--foreground-muted);}
.cds-tableFooterCell-t62ixhw{color:var(--foreground-muted);}
.cds-tableOverflowWidth-tfn0nca{max-width:0;}
.cds-table-tk4h94g{display:table;width:100%;margin:0;padding:0;border-collapse:collapse;border:none;}.cds-table-tk4h94g thead,.cds-table-tk4h94g tbody,.cds-table-tk4h94g tfoot{padding:0;margin:0;border:none;}
.cds-tableFixed-t1hejx0l{table-layout:fixed;}
.cds-tableVariantBase-tjov3pq{overflow:auto;width:100%;}.cds-tableVariantBase-tjov3pq table{background-color:var(--background);color:var(--foreground);min-width:-webkit-fit-content;min-width:-moz-fit-content;min-width:fit-content;}
.cds-tableVariantGraph-t1q3u64q table > caption{border-bottom:var(--border-width-card) solid var(--line);}.cds-tableVariantGraph-t1q3u64q table > tfoot{border-top:var(--border-width-card) solid var(--line);}.cds-tableVariantGraph-t1q3u64q table > tr > td,.cds-tableVariantGraph-t1q3u64q table > tbody > tr > td,.cds-tableVariantGraph-t1q3u64q table > tbody > tr > th,.cds-tableVariantGraph-t1q3u64q table > thead > .table-row,.cds-tableVariantGraph-t1q3u64q table > tfoot > tr > td{border-bottom:var(--border-width-card) solid var(--line);border-right:var(--border-width-card) solid var(--line);}.cds-tableVariantGraph-t1q3u64q table > tbody > tr > th,.cds-tableVariantGraph-t1q3u64q table > thead > tr > th{box-shadow:inset 0px -1px 0px 0px var(--line);border-right:var(--border-width-card) solid var(--line);}.cds-tableVariantGraph-t1q3u64q table > tbody > tr:last-child > th,.cds-tableVariantGraph-t1q3u64q table > tbody > tr:last-child > td,.cds-tableVariantGraph-t1q3u64q table > tfoot > tr:last-child > td{border-bottom:none;}.cds-tableVariantGraph-t1q3u64q table > thead > tr > th:last-child,.cds-tableVariantGraph-t1q3u64q table > tbody > tr > th:last-child,.cds-tableVariantGraph-t1q3u64q table > tbody > tr > td:last-child,.cds-tableVariantGraph-t1q3u64q table > thead > .table-row:last-child,.cds-tableVariantGraph-t1q3u64q table > tfoot > tr > td:last-child{border-right:none;}
.cds-tableVariantRuled-t6gmi2s table > caption{border-bottom:var(--border-width-card) solid var(--line);}.cds-tableVariantRuled-t6gmi2s table > tfoot{border-top:var(--border-width-card) solid var(--line);}.cds-tableVariantRuled-t6gmi2s table > tr > td,.cds-tableVariantRuled-t6gmi2s table > tbody > tr > th,.cds-tableVariantRuled-t6gmi2s table > tbody > tr > td,.cds-tableVariantRuled-t6gmi2s table > tfoot > tr > td{border-bottom:var(--border-width-card) solid var(--line);}.cds-tableVariantRuled-t6gmi2s table > thead > tr > th{box-shadow:inset 0px -1px 0px 0px var(--line);}.cds-tableVariantRuled-t6gmi2s table > tbody > tr:last-child > th,.cds-tableVariantRuled-t6gmi2s table > tbody > tr:last-child > td,.cds-tableVariantRuled-t6gmi2s table > tfoot > tr:last-child > td{border:none;}
.cds-tableBorder-t1li0ysy{border:var(--border-width-card) solid var(--line);border-radius:var(--border-radius-rounded);}
.cds-tableStickyClassName-t1e2qhu4.cds-table-header{position:-webkit-sticky;position:sticky;top:0;z-index:1;}
.cds-tableRow-trq0d55:nth-child(1n){background-color:var(--background);padding:0;border:0;}.cds-tableRow-trq0d55 > th{background-color:inherit;}
.cds-tableRowHover-t1gd5xs5:nth-child(1n):focus,.cds-tableRowHover-t1gd5xs5:nth-child(1n):hover{background-color:rgba(var(--gray5),0.35);}
.s4pjp9p{background-color:rgb(var(--gray15));padding-top:0;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2VzL2xpYnMvd2FsbGV0LWNkcy13ZWIvY29tcG9uZW50cy9UeFByZXZpZXdGYWxsYmFjay9UeFByZXZpZXdGYWxsYmFjay50c3giXSwibmFtZXMiOlsiLnM0cGpwOXAiXSwibWFwcGluZ3MiOiJBQWtFY0EiLCJmaWxlIjoiL3dvcmtzcGFjZXMvbGlicy93YWxsZXQtY2RzLXdlYi9jb21wb25lbnRzL1R4UHJldmlld0ZhbGxiYWNrL1R4UHJldmlld0ZhbGxiYWNrLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAbGluYXJpYS9jb3JlJztcbmltcG9ydCB7IHVzZVR4UHJldmlld01lc3NhZ2VzIH0gZnJvbSAnY2Itd2FsbGV0LWRhdGEvaG9va3MvVHhQcmV2aWV3L3VzZVR4UHJldmlld01lc3NhZ2VzJztcbmltcG9ydCB7IFNjYW5uZXJTZXJ2aWNlIH0gZnJvbSAnY2Itd2FsbGV0LWRhdGEvc3RvcmVzL1R4U2Nhbm5lci9pbnRlcmZhY2VzL1NjYW5UeFJlc3VsdCc7XG5pbXBvcnQgeyBJY29uIH0gZnJvbSAnQGNiaHEvY2RzLXdlYi9pY29ucy9JY29uJztcbmltcG9ydCB7IEJveCwgSFN0YWNrIH0gZnJvbSAnQGNiaHEvY2RzLXdlYi9sYXlvdXQnO1xuaW1wb3J0IHsgVG9vbHRpcCB9IGZyb20gJ0BjYmhxL2Nkcy13ZWIvb3ZlcmxheXMvVG9vbHRpcC9Ub29sdGlwJztcbmltcG9ydCB7IFRhYmxlLCBUYWJsZUJvZHksIFRhYmxlUm93IH0gZnJvbSAnQGNiaHEvY2RzLXdlYi90YWJsZXMnO1xuaW1wb3J0IHsgVGFibGVDZWxsRmFsbGJhY2sgfSBmcm9tICdAY2JocS9jZHMtd2ViL3RhYmxlcy9UYWJsZUNlbGxGYWxsYmFjayc7XG5pbXBvcnQgeyBUZXh0TGVnYWwgfSBmcm9tICdAY2JocS9jZHMtd2ViL3R5cG9ncmFwaHknO1xuXG50eXBlIFR4U2Nhbm5lckZhbGxiYWNrUHJvcHMgPSB7XG4gIG9wZXJhdGlvblNvdXJjZT86IFNjYW5uZXJTZXJ2aWNlO1xufTtcblxuLyoqXG4gKiBUaGlzIGlzIHRoZSBsb2FkaW5nIGNvbXBvbmVudCBkaXNwbGF5ZWQgd2hlbiB0aGUgVHhTY2FubmVyIFVJIG9yIE1lc3NhZ2VTY2FubmVyIFVJIGlzIGxvYWRpbmcuIEl0IGRpc3BsYXlzIGEgY29udGV4dHVhbCBtZXNzYWdlXG4gKiBiYXNlZCBvbiB0aGUgZW50aXR5IGJlaW5nIHNjYW5uZWQuXG4gKlxuICogQHBhcmFtIHNjYW5uZXJFbnRpdHkg4oCTIHRoZSBlbnRpdHkgdGhhdCB3YXMgYmVpbmcgc2Nhbm5lZCB3aXRoIG91ciBpbnRlcm5hbCBzZXJ2aWNlICh0cmFuc2FjdGlvbiBvciBtZXNzYWdlKVxuICovXG5mdW5jdGlvbiBUeFNjYW5uZXJGYWxsYmFjayh7XG4gIG9wZXJhdGlvblNvdXJjZSA9IFNjYW5uZXJTZXJ2aWNlLlRYX1NDQU5ORVIsXG59OiBUeFNjYW5uZXJGYWxsYmFja1Byb3BzKSB7XG4gIGNvbnN0IHR4UHJldmlld01lc3NhZ2VzID0gdXNlVHhQcmV2aWV3TWVzc2FnZXMob3BlcmF0aW9uU291cmNlKTtcblxuICByZXR1cm4gKFxuICAgIDxCb3hcbiAgICAgIGZsZXhEaXJlY3Rpb249XCJjb2x1bW5cIlxuICAgICAgZGFuZ2Vyb3VzbHlTZXRCYWNrZ3JvdW5kPVwicmdiKHZhcigtLWdyYXkxNSkpXCJcbiAgICAgIHNwYWNpbmdIb3Jpem9udGFsPXszfVxuICAgICAgc3BhY2luZ1ZlcnRpY2FsPXsyfVxuICAgICAgdGVzdElEPVwidHgtc2Nhbm5lci1mYWxsYmFja1wiXG4gICAgPlxuICAgICAgPEhTdGFjaz5cbiAgICAgICAgPFRleHRMZWdhbCBhcz1cInBcIiBjb2xvcj1cImZvcmVncm91bmRNdXRlZFwiPlxuICAgICAgICAgIHt0eFByZXZpZXdNZXNzYWdlcy5mYWxsYmFja1RpdGxlfVxuICAgICAgICA8L1RleHRMZWdhbD5cbiAgICAgICAgPFRvb2x0aXAgY29udGVudD17dHhQcmV2aWV3TWVzc2FnZXMuYXNzZXRDaGFuZ2VUb29sdGlwQ29udGVudH0gcGxhY2VtZW50PVwiYm90dG9tXCI+XG4gICAgICAgICAgPEljb25cbiAgICAgICAgICAgIHRlc3RJRD1cImRhcHAtdHJhbnNhY3Rpb24tc2FmZXR5LXRvb2x0aXAtaWNvblwiXG4gICAgICAgICAgICBuYW1lPVwiaW5mb1wiXG4gICAgICAgICAgICBzaXplPVwieHNcIlxuICAgICAgICAgICAgY29sb3I9XCJmb3JlZ3JvdW5kTXV0ZWRcIlxuICAgICAgICAgICAgc3BhY2luZ1N0YXJ0PXswLjV9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgPC9IU3RhY2s+XG5cbiAgICAgIDxUYWJsZT5cbiAgICAgICAgPFRhYmxlQm9keT5cbiAgICAgICAgICA8VGFibGVSb3cgY2xhc3NOYW1lPXtzdHlsZX0+XG4gICAgICAgICAgICA8VGFibGVDZWxsRmFsbGJhY2tcbiAgICAgICAgICAgICAgdGl0bGVcbiAgICAgICAgICAgICAgZW5kPVwicGljdG9ncmFtXCJcbiAgICAgICAgICAgICAgaW5uZXJTcGFjaW5nPXt7IHNwYWNpbmdIb3Jpem9udGFsOiAwLCBzcGFjaW5nVG9wOiAwIH0gYXMgY29uc3R9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvVGFibGVSb3c+XG4gICAgICAgIDwvVGFibGVCb2R5PlxuICAgICAgPC9UYWJsZT5cbiAgICA8L0JveD5cbiAgKTtcbn1cblxuZXhwb3J0IGNvbnN0IFRyYW5zYWN0aW9uU2Nhbm5lckZhbGxiYWNrID0gbWVtbyhUeFNjYW5uZXJGYWxsYmFjayk7XG5cbmNvbnN0IHN0eWxlID0gY3NzYFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IodmFyKC0tZ3JheTE1KSk7XG4gIHBhZGRpbmctdG9wOiAwO1xuYDtcbiJdfQ==*/

/*# sourceMappingURL=2896.css.map*/