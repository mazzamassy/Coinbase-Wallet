.qksfa46{cursor:pointer;margin-top:auto;margin-bottom:auto;margin-left:8px;}.qksfa46 span:hover{color:var(--primary) !important;}
/*# sourceMappingURL=data:application/json;base64,*/
.cds-lottieStyles-l1xkpyop .palette_foreground_stroke{stroke:var(--foreground);}.cds-lottieStyles-l1xkpyop .palette_foreground_fill{fill:var(--foreground);}.cds-lottieStyles-l1xkpyop .palette_foregroundMuted_stroke{stroke:var(--foreground-muted);}.cds-lottieStyles-l1xkpyop .palette_foregroundMuted_fill{fill:var(--foreground-muted);}.cds-lottieStyles-l1xkpyop .palette_background_stroke{stroke:var(--background);}.cds-lottieStyles-l1xkpyop .palette_background_fill{fill:var(--background);}.cds-lottieStyles-l1xkpyop .palette_backgroundAlternate_stroke{stroke:var(--background-alternate);}.cds-lottieStyles-l1xkpyop .palette_backgroundAlternate_fill{fill:var(--background-alternate);}.cds-lottieStyles-l1xkpyop .palette_backgroundInverse_stroke{stroke:var(--background-inverse);}.cds-lottieStyles-l1xkpyop .palette_backgroundInverse_fill{fill:var(--background-inverse);}.cds-lottieStyles-l1xkpyop .palette_backgroundOverlay_stroke{stroke:var(--background-overlay);}.cds-lottieStyles-l1xkpyop .palette_backgroundOverlay_fill{fill:var(--background-overlay);}.cds-lottieStyles-l1xkpyop .palette_line_stroke{stroke:var(--line);}.cds-lottieStyles-l1xkpyop .palette_line_fill{fill:var(--line);}.cds-lottieStyles-l1xkpyop .palette_lineHeavy_stroke{stroke:var(--line-heavy);}.cds-lottieStyles-l1xkpyop .palette_lineHeavy_fill{fill:var(--line-heavy);}.cds-lottieStyles-l1xkpyop .palette_primary_stroke{stroke:var(--primary);}.cds-lottieStyles-l1xkpyop .palette_primary_fill{fill:var(--primary);}.cds-lottieStyles-l1xkpyop .palette_primaryWash_stroke{stroke:var(--primary-wash);}.cds-lottieStyles-l1xkpyop .palette_primaryWash_fill{fill:var(--primary-wash);}.cds-lottieStyles-l1xkpyop .palette_primaryForeground_stroke{stroke:var(--primary-foreground);}.cds-lottieStyles-l1xkpyop .palette_primaryForeground_fill{fill:var(--primary-foreground);}.cds-lottieStyles-l1xkpyop .palette_negative_stroke{stroke:var(--negative);}.cds-lottieStyles-l1xkpyop .palette_negative_fill{fill:var(--negative);}.cds-lottieStyles-l1xkpyop .palette_negativeForeground_stroke{stroke:var(--negative-foreground);}.cds-lottieStyles-l1xkpyop .palette_negativeForeground_fill{fill:var(--negative-foreground);}.cds-lottieStyles-l1xkpyop .palette_negativeWash_stroke{stroke:var(--negative-wash);}.cds-lottieStyles-l1xkpyop .palette_negativeWash_fill{fill:var(--negative-wash);}.cds-lottieStyles-l1xkpyop .palette_positive_stroke{stroke:var(--positive);}.cds-lottieStyles-l1xkpyop .palette_positive_fill{fill:var(--positive);}.cds-lottieStyles-l1xkpyop .palette_positiveForeground_stroke{stroke:var(--positive-foreground);}.cds-lottieStyles-l1xkpyop .palette_positiveForeground_fill{fill:var(--positive-foreground);}.cds-lottieStyles-l1xkpyop .palette_secondary_stroke{stroke:var(--secondary);}.cds-lottieStyles-l1xkpyop .palette_secondary_fill{fill:var(--secondary);}.cds-lottieStyles-l1xkpyop .palette_secondaryForeground_stroke{stroke:var(--secondary-foreground);}.cds-lottieStyles-l1xkpyop .palette_secondaryForeground_fill{fill:var(--secondary-foreground);}.cds-lottieStyles-l1xkpyop .palette_transparent_stroke{stroke:var(--transparent);}.cds-lottieStyles-l1xkpyop .palette_transparent_fill{fill:var(--transparent);}.cds-lottieStyles-l1xkpyop .palette_warning_stroke{stroke:var(--warning);}.cds-lottieStyles-l1xkpyop .palette_warning_fill{fill:var(--warning);}.cds-lottieStyles-l1xkpyop .palette_warningForeground_stroke{stroke:var(--warning-foreground);}.cds-lottieStyles-l1xkpyop .palette_warningForeground_fill{fill:var(--warning-foreground);}

/*# sourceMappingURL=3654.css.map*/